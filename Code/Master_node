#include <SoftwareSerial.h>
#include <Servo.h>
#include "Timer.h"


#define PwmPin 9
#define buzzerPin 4

SoftwareSerial mini = SoftwareSerial(2, 4); //2-> Rx of uno, 4 -> Tx of uno
Servo myservo;
Timer t;

int angle = 0;

void setup() {
  Serial.begin(9600);
  mini.begin(9600);
  mini.listen();
  Serial.println("transmission starts");  
  pinMode(PwmPin, OUTPUT);
  myservo.attach(PwmPin);
  pinMode( buzzerPin, OUTPUT);
  t.every(5000, intruder_detection, (void*)0);

}

int intruder_detect ;

void intruder_detection(void *context)
{
  if(intruder_detect < 5){
   digitalWrite(buzzerPin, HIGH);
   Serial.println("Slave is not alive, report the intrusion");
  } 
  else{
  digitalWrite(buzzerPin, LOW);
  }
  intruder_detect = 0;
}

char data[255];
uint8_t k = 0;

char validtags[30][30] = {"004B86E9", "0010A0C9", "00A721FE", "004A6404", "00502E0A", "0064E6E9", "004A5D75", "00AAAB31", "0064E6B5","00AA8A2F" };
int n;
char * id;

void loop() { 
  t.update();
  if ( mini.available() > 0 )
 {     
    
    data[k] = mini.read();
    if( data[k] == '\n')
    {
        intruder_detect++;
        data[k+1] = '\0';
        Serial.print(data);
        k = 0;
        if( strlen(data) == 8)
        {
          myservo.write(0);
          return;
        }
        if( strlen(data) == 20)
        {
          id = strtok(data, "Valid Tag:");
          if(id != NULL)
          {
            bool flag = false;
            for (n=0 ; n<11 ; n++)
            {
            if ( (strncmp (validtags[n],id, 8)) == 0)
            {
              Serial.println("match success, open the door");
              flag = true;
              myservo.write(180);
            }

            }
            if( flag == false)
            {
              Serial.println("unregistered user, keep the door closed");
              myservo.write(angle);
            }


           }
         }
      
    }
      else{
    k++;}
    
   }
}
